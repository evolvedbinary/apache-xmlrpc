<?xml version="1.0"?>

<document>
  <properties>
    <title>Built in Http Server</title>
    <author email="hannes@helma.at">Hannes Wallnofer</author>
  </properties>

  <body>
    <section name="Built in Http Server">
      <p>
      </p>
    </section>
  </body>
</document>

<!--

The XML-RPC library comes with its own built-in HTTP server. This is not a general 
purpose web server, its only purpose is to handle XML-RPC requests. 
The HTTP server can be embedded in any Java application with a few 
simple lines:

<small><tt>&nbsp; WebServer webserver = new WebServer (port);</tt>
<tt>&nbsp; webserver.addHandler ("examples", someHandler);</tt></small>

You can also start the web server from the command line by typing:

<small><tt>&nbsp; java helma.xmlrpc.WebServer</tt></small>
You can specify the server port, but there's no way to manipulate RPC handlers in 
command line mode, so you'll either have to modify WebServer.java for your purposes 
or embed it into your own application. A special bonus when using the built in Web 
server is that you can set the IP addresses of clients from which to accept or 
deny requests. This is done via the following methods:

<small><tt>&nbsp; webserver.setParanoid (true);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

// deny all clients</tt>

<tt>&nbsp; webserver.acceptClient ("192.168.0.*"); // allow LAN access</tt>

<tt>&nbsp; webserver.denyClient ("192.168.0.3");&nbsp; // except for

this one</tt>

<tt>&nbsp; ...</tt>

<tt>&nbsp; webserver.setParanoid (false);&nbsp; // disable client filter</tt></small>

If the client filter is activated, entries to the deny list always override those in 
the accept list. Thus, <tt>webserver.denyClient ("*.*.*.*")</tt> would 
completely disable the web server.

Note that the XML-RPC client in Frontier 5 has its requests hard-coded to URI /RPC2. 
To work with these clients, you have to configure your server environment to respond 
to /RPC2. This should be fixed in a newer version.

-->
